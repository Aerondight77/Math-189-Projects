knitr::opts_chunk$set(echo = TRUE)
nutrients <- read.csv("~/GitHub/Math-189-Projects/Homework 4/nutrients.csv")
sample.mean = sapply(nutrients, mean)
sample.sd = sapply(nutrients, sd)
calc.t = t.test( nutrients[,1], alternative= "two.sided", mu = 1000, conf.level = 0.95)
iron.t = t.test( nutrients[,2], alternative= "two.sided", mu = 15, conf.level = 0.95)
prot.t = t.test( nutrients[,3], alternative= "two.sided", mu = 60, conf.level = 0.95)
vitA.t = t.test( nutrients[,4], alternative= "two.sided", mu = 800, conf.level = 0.95)
vitC.t = t.test( nutrients[,5], alternative= "two.sided", mu = 75, conf.level = 0.95)
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
pval[1:3]
pval[4:5]
knitr::opts_chunk$set(echo = TRUE)
m = 50
pv <- numeric(m)
for(j in 1:m){
t_test <- t.test(multiple[,j], mu=0,conf.level = 0.9)
pv[j] <- t_test$p.value
}
knitr::opts_chunk$set(echo = TRUE)
nutrients <- read.csv("~/GitHub/Math-189-Projects/Homework 4/nutrients.csv")
sample.mean = sapply(nutrients, mean)
sample.sd = sapply(nutrients, sd)
calc.t = t.test( nutrients[,1], alternative= "two.sided", mu = 1000, conf.level = 0.95)
iron.t = t.test( nutrients[,2], alternative= "two.sided", mu = 15, conf.level = 0.95)
prot.t = t.test( nutrients[,3], alternative= "two.sided", mu = 60, conf.level = 0.95)
vitA.t = t.test( nutrients[,4], alternative= "two.sided", mu = 800, conf.level = 0.95)
vitC.t = t.test( nutrients[,5], alternative= "two.sided", mu = 75, conf.level = 0.95)
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
pval[1:3]
pval[4:5]
multiple <- read.table("~/GitHub/Math-189-Projects/Homework 4/multiple.txt", quote="\"", comment.char="")
m = 50
pv <- numeric(m)
for(j in 1:m){
t_test <- t.test(multiple[,j], mu=0,conf.level = 0.9)
pv[j] <- t_test$p.value
}
sum(pv[11:50] < 0.1) # false positives
sum(pv[1:10] > 0.1) # false negatives
sum(pv[11:50] < 0.1)/sum(pv < 0.1) # false discovery proportion
bonf <- p.adjust(pv,method="bonferroni")
sum(bonf[11:50] < 0.1) # false positives
sum(bonf[1:10] > 0.1) # false negatives
sum(bonf[11:50] < 0.1)/sum(bonf < 0.1) # false discovery proportion
bh <- p.adjust(pv,method="BH")
sum(bh[11:50] < 0.1) # false positives
sum(bh[1:10] > 0.1) # false negatives
sum(bh[11:50] < 0.1)/sum(bh < 0.1) # false discovery proportion
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
pval[1:3]
colnames(as.matrix(pval), c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
pval[1:3]
row.names(as.matrix(pval), c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
?c
as.matrix(pval)
pval= as.matrix(pval)
pval= as.data.frame(pval)
row.names(pval, c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
pval
t(pval)
View(pval)
View(pval)
pval= t(as.data.frame(pval))
colnames(pval, F, c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
View(pval)
View(pval)
colnames(pval, T, c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
colnames(pval, F, c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
pval
col.names = colnames(pval, c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
col.names = colnames(pval,F,c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
View(pval)
pval= as.data.frame(pval)
rownames(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
pval= as.data.frame(pval)
rownames(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C"))
rownames(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
View(pval)
pval= as.data.frame(pval)
rownames(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
View(pval)
View(pval)
col.names(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
col.names(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
names(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
pval
View(pval)
View(pval)
mu= c(calc.t$mu,iron.t$mu,prot.t$mu,vitA.t$mu,vitC.t$mu)
mu = as.data.frame(mu)
confint = c(calc.t$conf.int,iron.t$conf.int,prot.t$conf.int,vitA.t$conf.int,vitC.t$conf.int)
pval= as.data.frame(pval)
mu = as.data.frame(mu)
confint = as.data.frame(confint)
rbind(pval,mu,confint)
rbind(pval,mu)
rownames(c("P-value","Mean"))
names(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
Findings= rbind(pval,mu)
rownames(c("P-value","Mean"))
names(pval) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
rownames(Findings)= (c("P-value","Mean"))
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
rownames(Findings)= (c("P-value","Mean"))
Findings= rbind(pval,mu)
rownames(Findings)= (c("P-value","Mean"))
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
findings
Findings
View(Findings)
View(Findings)
Findings= rbind(pval,mu)
View(Findings)
View(mu)
mu= c(calc.t$mu,iron.t$mu,prot.t$mu,vitA.t$mu,vitC.t$mu)
calc.t$mu
calc.t
mu= c(calc.t$estimate,iron.t$estimate,prot.t$estimate,vitA.t$estimate,vitC.t$estimate)
pval= as.data.frame(pval)
mu = as.data.frame(mu)
Findings= rbind(pval,mu)
mu = t(as.data.frame(mu))
Findings= rbind(pval,mu)
rownames(Findings)= (c("P-value","Mean"))
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
View(mu)
View(mu)
Findings= rbind(pval,mu)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
nutrients <- read.csv("~/GitHub/Math-189-Projects/Homework 4/nutrients.csv")
sample.mean = sapply(nutrients, mean)
sample.sd = sapply(nutrients, sd)
calc.t = t.test( nutrients[,1], alternative= "two.sided", mu = 1000, conf.level = 0.95)
iron.t = t.test( nutrients[,2], alternative= "two.sided", mu = 15, conf.level = 0.95)
prot.t = t.test( nutrients[,3], alternative= "two.sided", mu = 60, conf.level = 0.95)
vitA.t = t.test( nutrients[,4], alternative= "two.sided", mu = 800, conf.level = 0.95)
vitC.t = t.test( nutrients[,5], alternative= "two.sided", mu = 75, conf.level = 0.95)
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
mu= c(calc.t$estimate,iron.t$estimate,prot.t$estimate,vitA.t$estimate,vitC.t$estimate)
pval= as.data.frame(pval)
mu = t(as.data.frame(mu))
Findings= rbind(pval,mu)
pval= t(as.data.frame(pval))
mu = t(as.data.frame(mu))
Findings= rbind(pval,mu)
View(mu)
View(mu)
View(pval)
View(pval)
mu = t(as.data.frame(mu))
Findings= rbind(pval,mu)
rownames(Findings)= (c("P-value","Mean"))
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
View(Findings)
View(Findings)
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
names(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
View(Findings)
rownames(Findings)= (c("P-value","Mean"))
colnames(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
pval=c(calc.t$p.value,iron.t$p.value,prot.t$p.value,vitA.t$p.value,vitC.t$p.value)
mu= c(calc.t$estimate,iron.t$estimate,prot.t$estimate,vitA.t$estimate,vitC.t$estimate)
pval= t(as.data.frame(pval))
mu = t(as.data.frame(mu))
Findings= rbind(pval,mu)
rownames(Findings)= (c("P-value","Mean"))
colnames(Findings) = c("Calcium", "Iron", "Protein", "Vitamin A", "Vitamin C")
Findings
print(Findings)
print.data.frame(Findings)
knitr::kable(Findings)

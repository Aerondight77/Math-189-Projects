bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
lrBoot
lr
print(summ$coefficients[2,1])
#c(summ$coefficients[2,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#report CI AND LENGTH
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
lr
print(summ$coefficients[2,1])
#c(summ$coefficients[2,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#report CI AND LENGTH
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
summ
print(summ$coefficients[2,1])
#c(summ$coefficients[2,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#report CI AND LENGTH
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
summ
print(summ$coefficients[1,1])
#c(summ$coefficients[2,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#report CI AND LENGTH
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#report CI AND LENGTH
res <- residuals(lr)
yHat <- lr$fitted.values
x = 2
B = 1000
zBoot = 1:B
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
resBoot <- res[index]
yBoot <- yHat + resBoot
lrBoot <- lm(yBoot ~ cars$wt)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.025))
#PRINT CI and length
anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
model1 <- lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
test_statistic <- summary(anova_result)[["fstatistic"]][["value"]]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
test_statistic <- summary(anova_result)["fstatistic"]["value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
summary(anova_result)
#test_statistic <- summary(anova_result)["fstatistic"]["value"]
#print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
test_statistic <- summary(anova_result)[["Pr(>F)"]][1]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
#test_statistic <- summary(anova_result)[["Pr(>F)"]][1]
#print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
#test_statistic <- summary(anova_result)[["F value"]][1]
#print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[["F value"]][1]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[["F"]][1]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F", 1]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F"][2]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[2]["F"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[2]][["F"]]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[2, "F value"]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[2]["F value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[1]["F value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[1]]["F value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[2]]["F value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[2]]["F"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[1]][1,5]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[1]][1,3]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[2]][1,3]
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[[2]]["F value"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[2]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)[2][5]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)
print(typeof(test_statistic))
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F value"]
print(typeof(test_statistic))
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F value"]
printtest_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- summary(anova_result)["F value"]
print(test_statistic)
?anova
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
typeof(anova_result)
test_statistic <- summary(anova_result)
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
typeof(anova_result["F"])
test_statistic <- anova_result
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result["F"]
test_statistic <- anova_result
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- anova_result["F"]
print(test_statistic)
anova_result <- anova(lm(mpg ~ 1, data = cars), lm(mpg ~ wt, data = cars))
anova_result
test_statistic <- anova_result["F"]
print(test_statistic)
pVal <- anova_result["Pr(>F)"]
print(pVal)
nova_result2 <- anova(lm(mpg ~ wt, data = cars), lm(mpg ~ wt + hp, data = cars))
nova_result2
test_statistic <- nova_result2["F"]
print(test_statistic)
pVal <- nova_result2["Pr(>F)"]
print(pVal)
nova_result3 <- anova(lm(mpg ~ wt + hp, data = cars), lm(mpg ~ wt + hp + disp, data = cars))
nova_result3
test_statistic <- nova_result3["F"]
print(test_statistic)
pVal <- nova_result3["Pr(>F)"]
print(pVal)
nova_result3 <- anova(lm(mpg ~ wt + hp, data = cars), lm(mpg ~ wt + hp + disp + cyl + drat + qsec + vs + am + carb, data = cars))
nova_result3
test_statistic <- nova_result3["F"]
print(test_statistic)
pVal <- nova_result3["Pr(>F)"]
print(pVal)
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.975), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
#report CI AND LENGTH
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
#report CI AND LENGTH
res <- residuals(lr)
yHat <- lr$fitted.values
x = 2
B = 1000
zBoot = 1:B
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
resBoot <- res[index]
yBoot <- yHat + resBoot
lrBoot <- lm(yBoot ~ cars$wt)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
#PRINT CI and length
res <- residuals(lr)
yHat <- lr$fitted.values
x = 2
B = 1000
zBoot = 1:B
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
resBoot <- res[index]
yBoot <- yHat + resBoot
lrBoot <- lm(yBoot ~ cars$wt)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
nova_result3 <- anova(lm(mpg ~ wt + hp, data = cars), lm(mpg ~ wt + hp + disp, data = cars))
nova_result3
test_statistic <- nova_result3["F"]
print(test_statistic)
pVal <- nova_result3["Pr(>F)"]
print(pVal)
pwd
setwd("/Users/dariabrown/Documents/GitHub/185/hw3")
pwd
setwd("/Users/dariabrown/Documents/GitHub/185/hw3")
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
pVal <- coef(summ)["wt", "Pr(>|t|)"]
testStat <- coef(summ)["wt", "t value"]
testStat
pVal
cars <- read.csv("~/Documents/GitHub/185/hw3/cars.csv")
lr <- lm(mpg ~ wt, data = cars)
summ <- summary(lr)
summ
string <- c(coef(summ)["(Intercept)", "Estimate"],  coef(summ)["wt", "Estimate"])
cat(paste("Y = ", string[1], "+", string[2],"*X"))
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
prediction[1]
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
CI <- cat(prediction[2], prediction[3])
CI
lengthOfCI = prediction[3] - prediction[2]
lengthOfCI
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
CI <- cat(prediction[2], prediction[3])
CI
lengthOfCI = prediction[3] - prediction[2]
lengthOfCI
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
CI <- cat(paste(prediction[2], prediction[3]))
CI
lengthOfCI = prediction[3] - prediction[2]
lengthOfCI
new = data.frame(wt = 2.0)
prediction <- predict(lr, newdata = new, interval = 'confidence', level = 0.9)
prediction
CI <- cat(prediction[2], prediction[3])
print(CI)
lengthOfCI = prediction[3] - prediction[2]
lengthOfCI
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
len = CI[2]- CI[1]
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
CI[1]
len = CI[2]- CI[1]
B = 1000
zBoot = 1:B
x = 2 #2000 lbs
for (b in 1:B)
{
index = sample(1: nrow(cars), replace = T)
bootCars <- cars[index,]
lrBoot <- lm(mpg ~ wt, data = bootCars)
zBoot[b] <- lrBoot$coefficients[1] + lrBoot$coefficients[2]*x - lr$coefficients[1] - lr$coefficients[2]*x
}
CI <- c(summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.95), summ$coefficients[1,1] + summ$coefficients[2,1]*x - quantile(zBoot, 0.05))
print(CI)
len = CI[2]- CI[1]
len
# OLD CODE
#temp_table <- table(Wage$hi,round(predict(logReg,type='response')))
#temp_table
# NEW CODE
qda_pred <- predict(qda_fit, newdata = test_set)
library(mlbench)
library(ggplot2)
library(dplyr)
data("PimaIndiansDiabetes") #loads data under "name"
pimaData <- PimaIndiansDiabetes
#create new numeric col of all 1s
pimaData$response <- 1
#crate response col, transform string to categorical
pimaData$response[pimaData$diabetes == 'neg'] <- 0
#bmi > 35 col
pimaData$bmi <- 0
pimaData$bmi[pimaData$mass > 35] <- 1
logRegMulti <- glm(response~glucose + bmi, data=pimaData, family="binomial")
summary(logRegMulti)
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(pimaData$glucose),to=max(pimaData$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(pimaData$glucose),to=max(pimaData$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
ggplot() +
geom_point(data=pimaData,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=pimaData,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds, color="BMI < 35")) +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
geom_line(data=highPredDF,aes(x=x,y=highPreds, color="BMI > 35")) +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
labs(y="Probability of having Diabetes", x="Glucose")
library(MASS)
set.seed(1)
train = sample(768, 768*.8)
train_set <- pimaData[train, ]
test_set <- pimaData[-train, ]
lda_fit <- lda(response ~ glucose + mass, data = pimaData,
subset = train)
lda_fit
ggplot(test_set, aes(x=glucose,y=mass)) + geom_point(aes(color = diabetes))
Diabetic <- test_set$response == 1
NonDiabetic <- test_set$response == 0
Diabetic.df <- test_set[Diabetic, ]
NonDiabetic.df <- test_set[NonDiabetic, ]
diabetic.gluc.mean <- mean(Diabetic.df$glucose)
diabetic.mass.mean <- mean(Diabetic.df$mass)
nondiabetic.gluc.mean <- mean(NonDiabetic.df$glucose)
nondiabetic.mass.mean <- mean(NonDiabetic.df$mass)
x1 <- cbind(diabetic.gluc.mean,diabetic.mass.mean)
x2 <- cbind(nondiabetic.gluc.mean,nondiabetic.mass.mean)
pi1 = 0.6465798
pi2 = 0.3534202
mu1hat <- colMeans(x1)
mu2hat <- colMeans(x2)
Sigmahat <- cov(rbind(x1,x2))
intercept <- c(log(pi1/pi2) - 0.5*t(mu1hat+mu2hat)%*%solve(Sigmahat, tol = 1e-18)%*%(mu1hat-mu2hat))
slope <- solve(Sigmahat, tol = 1e-18)%*%(mu1hat-mu2hat)
b0 <- intercept/(-slope[2])
b1 <- slope[1]/(-slope[2])
lda_pred <- predict(lda_fit, newdata = test_set)
temp_table <- table(lda_pred$class, test_set$response)
temp_table
qda_fit <- qda(response ~ glucose + mass, data = pimaData,
subset = train)
qda_fit
# OLD CODE
#temp_table <- table(Wage$hi,round(predict(logReg,type='response')))
#temp_table
# NEW CODE
qda_pred <- predict(qda_fit, newdata = test_set)
temp_table2 <- table(qda_pred$class, test_set$response)
temp_table2
(28 + 94) / (28 + 94 + 23 + 9)
(29 + 93) / (29 + 93 + 22 + 10)
mean(qda_pred$class == test_set$response)
lda_pred <- predict(lda_fit, newdata = test_set)
temp_table <- table(lda_pred$class, test_set$response)
temp_table
#Calculating accuracy
mean(qda_pred$class == test_set$response)
mean(qda_pred$class == test_set$response)

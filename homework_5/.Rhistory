}
simNumber = 1000
numOfRejects <- replicate(simNumber, aproxPermTest(alpha = 0.05, B = 200, n = 500, m = 500))
propOfType2Errors = (simNumber - sum(numOfRejects))/simNumber
estPower = 1 - propOfType2Errors
print(estPower)
aproxPermTest <- function(alpha, B, n, m)
{
#H0: Fx = Fy FALSE!
sample1 = rexp(n, rate = 1)
sample2 = rexp(m, rate = 1.2)
Z = c(sample1, sample2)
#Observed test stat
KSTestObs <- ks.test(sample1, sample2, exact = FALSE)
Dobs = KSTestObs$statistic
#Permute data
Dperm = 1:B
for (b in 1:B)
{
Zperm = sample(Z) #sampling w/o replacement
permSample1 <- Zperm[1:n]
permSample2 <- Zperm[(n+1):(m+n)]
permutedTest <- ks.test(permSample1, permSample2, exact = FALSE)
Dperm[b] = permutedTest$statistic
}
pVal = (sum(abs(Dperm) >= abs(Dobs)) + 1)/(B + 1)
rejectNull = (pVal <= alpha)
return(rejectNull)
}
simNumber = 1000
numOfRejects <- replicate(simNumber, aproxPermTest(alpha = 0.05, B = 200, n = 500, m = 500))
propOfType2Errors = (simNumber - sum(numOfRejects))/simNumber
estPower = 1 - propOfType2Errors
print(estPower)
setwd("/Users/dariabrown/Documents/GitHub/189/Math-189-Projects/Homework7")
setwd("/Users/dariabrown/Documents/GitHub/189/Math-189-Projects/Homework7")
install.packages("mlbench")
library(PimaIndiansDiabetes)
library(mlbench)
library(PimaIndiansDiabetes)
/var/folders/77/01p3x_xs3clb65216t0rzzdw0000gn/T//Rtmp8QvwCr/downloaded_packages
library(mlbench)
data(PimaIndiansDiabetes)
library(mlbench)
data(PimaIndiansDiabetes)
View(PimaIndiansDiabetes)
library(mlbench)
data <- data(PimaIndiansDiabetes)
data
?glm
source("~/.active-rstudio-document", echo=TRUE)
setwd("/Users/dariabrown/Documents/GitHub/189/Math-189-Projects/Homework7")
source("~/Documents/GitHub/189/Math-189-Projects/Homework7/hw7notes.R", echo=TRUE)
force(Wage)
View(Wage)
wag$hi
wage$hi
Wage$hi<-1
Wage$hi[Wage$health_ins==unique(Wage$health_ins)[1]] <- 0
Wage$hi[Wage$health_ins==unique(Wage$health_ins)[2]] <- 1
logReg <- glm(hi~logwage,data=Wage,family="binomial")
summary(logReg)
?unique
library(mlbench)
library(ggplot2)
library(dplyr)
data <- data(PimaIndiansDiabetes)
#create new numeric col of all 1s
data$response <- 1
#
data$response[data$diabetes == 'neg'] <- 0
logRegMulti <- glm()
data <- data(PimaIndiansDiabetes)
data
head(data)
head(Wage)
library(mlbench)
data <- data(PimaIndiansDiabetes)
head(data)
data(PimaIndiansDiabetes)
head(data)
data(PimaIndiansDiabetes)
head(data)
View(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
library(mlbench)
library(ggplot2)
library(dplyr)
data(PimaIndiansDiabetes)
#create new numeric col of all 1s
data$response <- 1
data <- PimaIndiansDiabetes
head(data)
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#
data$response[data$diabetes == 'neg'] <- 0
logRegMulti <- glm()
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#
data$response[data$diabetes == 'neg'] <- 0
logRegMulti <- glm()
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#
data$response[data$diabetes == 'neg'] <- 0
#logRegMulti <- glm()
View(data)
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#crate response col, transform string to categorical
data$response[data$diabetes == 'neg'] <- 0
logReg <- glm(response~glucose, data=data, family="binomial")
summary(logReg)
#logRegMulti <- glm()
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#crate response col, transform string to categorical
data$response[data$diabetes == 'neg'] <- 0
#bmi > 35 col
data$bmi <- 0
data$bmi[data$mass > 35] <- 1
logRegMulti <- glm(response~glucose + mass, data=data, family="binomial")
summary(logRegMulti)
View(data)
xs <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose), length.out=1000))
xs
xs <- cbind(rep(0,10000), seq(from=min(data$glucose),to=max(data$glucose), length.out=1000))
predxb <- xs%*%coef(logRegMulti)
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#crate response col, transform string to categorical
data$response[data$diabetes == 'neg'] <- 0
#bmi > 35 col
data$bmi <- 0
data$bmi[data$mass > 35] <- 1
logRegMulti <- glm(response~glucose + mass, data=data, family="binomial")
summary(logRegMulti)
xs <- cbind(rep(0,10000), seq(from=min(data$glucose),to=max(data$glucose), length.out=1000))
predxb <- xs%*%coef(logRegMulti)
coef(logRegMulti)
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#crate response col, transform string to categorical
data$response[data$diabetes == 'neg'] <- 0
#bmi > 35 col
data$bmi <- 0
data$bmi[data$mass > 35] <- 1
logRegMulti <- glm(response~glucose + bmi, data=data, family="binomial")
summary(logRegMulti)
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
xs <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
predxb <- xs%*%coef(logRegMulti)
preds <-  1/(1+exp(-predxb))
predDF <- data.frame(x=xs[,2], preds=preds)
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=predDF,aes(x=x,y=preds),color="Red") +
labs(y="Probability of having health insurance",x="Log Wage")
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
xs <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
predxb <- xs%*%coef(logRegMulti)
preds <-  1/(1+exp(-predxb))
predDF <- data.frame(x=xs[,2], preds=preds)
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=predDF,aes(x=x,y=preds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-predxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=preds)
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#Glucose for
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#Glucose for
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ci <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ci[,1],ub=ci[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose", red = "BMI below 35")
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose", legend = "BMI below 35")
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose") +
legend("topright",c("BMI above 35","BMI below 35"), col=c("Blue", "Red"), lty=1:1)
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
legend("topright",c("BMI above 35","BMI below 35"), col=c("Blue", "Red"), lty=1:1)
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose", colour = "BMI above 35"
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose", colour = "BMI above 35")
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
#create new numeric col of all 1s
data$response <- 1
#crate response col, transform string to categorical
data$response[data$diabetes == 'neg'] <- 0
#bmi > 35 col
data$bmi <- 0
data$bmi[data$mass > 35] <- 1
logRegMulti <- glm(response~glucose + bmi, data=data, family="binomial")
summary(logRegMulti)
#Glucose for Low BMI
#       vector of 1s for intercept    vector of random glucose levels btw max and min        all bmi's > 35
BMILow <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(0, 10000))
lowPredxb <- BMILow%*%coef(logRegMulti)
lowPreds <-  1/(1+exp(-lowPredxb))
lowPredDF <- data.frame(x=BMILow[,2], preds=lowPreds)
#CI Low BMI
lowSexb <- sqrt(diag(BMILow%*%vcov(logRegMulti)%*%t(BMILow)))
lowCixb <- cbind(lowPredxb-1.96*lowSexb,lowPredxb+1.96*lowSexb)
ciLow <- 1/(1+exp(-lowCixb))
lowPredDF <- lowPredDF %>% mutate(lb=ciLow[,1],ub=ciLow[,2])
#Glucose for High BMI
BMIHigh <- cbind(rep(1,10000), seq(from=min(data$glucose),to=max(data$glucose),length.out=1000), rep(1, 10000))
highPredxb <- BMIHigh%*%coef(logRegMulti)
highPreds <-  1/(1+exp(-highPredxb))
highPredDF <- data.frame(x=BMIHigh[,2], preds=highPreds)
#CI High BMI
highSexb <- sqrt(diag(BMIHigh%*%vcov(logRegMulti)%*%t(BMIHigh)))
highCixb <- cbind(highPredxb-1.96*highSexb,highPredxb+1.96*highSexb)
ciHigh <- 1/(1+exp(-highCixb))
highPredDF <- highPredDF %>% mutate(lb=ciHigh[,1],ub=ciHigh[,2])
ggplot() +
geom_point(data=data,aes(y=response, x=glucose)) +
geom_line(data=lowPredDF,aes(x=x,y=lowPreds),color="Blue") +
geom_ribbon(data=lowPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Blue") +
geom_line(data=highPredDF,aes(x=x,y=highPreds),color="Red") +
geom_ribbon(data=highPredDF,aes(x=x,ymin=lb,ymax=ub),alpha=0.3,fill="Red") +
labs(y="Probability of having Diabetes", x="Glucose")
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
library(mlbench)
library(ggplot2)
library(dplyr)
data <- PimaIndiansDiabetes
library(mlbench)
head(PimaIndiansDiabetes)
head(PimaIndiansDiabetes)
